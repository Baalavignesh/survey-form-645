pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds'  
        KUBECONFIG_CREDENTIALS_ID = 'kubeconfig' 
        DOCKER_REPO = 'baalavignesh21/baalavignesh-survey'
    }

    stages {
        stage('Clone Repo') {
            steps {
                script {
                    // Clone the GitHub repository from the main branch
                    git branch: 'main', url: 'https://github.com/Baalavignesh/survey-form-645.git'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t baalavignesh21/baalavignesh-survey:${env.BUILD_ID} .'
                }
            }
        }

        // stage('Push Docker Image') {
        //     steps {
        //         script {
        //             withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
        //                 sh '/usr/local/bin/docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD https://index.docker.io/v1/'
        //                 sh "/usr/local/bin/docker push ${DOCKER_REPO}:${env.BUILD_ID}"
        //             }
        //         }
        //     }
        // }


        // stage('Deploy to Kubernetes') {
        //     steps {
        //         script {
        //             withCredentials([file(credentialsId: KUBECONFIG_CREDENTIALS_ID, variable: 'KUBECONFIG')]) {
        //                 sh 'export PATH=/Users/baalavignesh21/Downloads/google-cloud-sdk/bin:$PATH'
        //                 sh 'export USE_GKE_GCLOUD_AUTH_PLUGIN=True'
        //                 sh "kubectl apply -f deployment-definition.yaml"
        //                 sh "kubectl rollout restart deployment/survey-deployment"
        //             }
        //         }
        //     }
        // }
    }

    // post {
    //     always {
    //         // Clean up after pipeline runs
    //         cleanWs()
    //     }
    // }
}
